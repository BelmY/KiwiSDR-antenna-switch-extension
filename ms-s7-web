#!/usr/bin/env bash
# The MIT License (MIT)
#
# ms-s7-web - script that controls MS-S7-WEB antenna switch from console
#
# Copyright (c) 2016 Kari Karvonen
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

IPADDRESS=192.168.11.100
[ -r /etc/default/ms-s7-web ] && . /etc/default/ms-s7-web

###### do not change blow this line ######
CURLOPTS=" --silent --connect-timeout 1"
ANT=$(($1-1))

if [ "x`which curl`" == "x" ]; then
	echo "curl not found. Please install curl."
	echo "sudo apt-get install curl"
	exit 1
else
        curlexec=`which curl`
fi

MS7_Get () {
	if [ -z "$1" ]
	then
		# zero legth
		sleep 1
	else
		REPLY=`$curlexec $CURLOPTS $1`
		if [ "x$REPLY" == "x" ]; then
			# failed. Let's try again.
			REPLY=`$curlexec $CURLOPTS $1`
		fi
		if [ "x$REPLY" == "x" ]; then
			# failed again. One more shot.
			REPLY=`$curlexec $CURLOPTS $1`
		fi
	fi
}

MS7_Post () {
	if [ -z "$1" ]
	then
		# zero legth
		sleep 1
	else
		REPLY=`$curlexec $CURLOPTS --header 'Content-Type: application/x-www-form-urlencoded' $1`
		if [ "x$REPLY" == "x" ]; then
			# failed, let's try again
			REPLY=`$curlexec $CURLOPTS --header 'Content-Type: application/x-www-form-urlencoded' $1`
		fi
		if [ "x$REPLY" == "x" ]; then
			# failed again, one more shot
			REPLY=`$curlexec $CURLOPTS --header 'Content-Type: application/x-www-form-urlencoded' $1`
		fi
	fi
}


MS7_GroundAll() {
	for s in 0 1 2 3 4 5 6; do
		MS7_Post "-d pin=$s -d val=1 http://$IPADDRESS/dout.cgi"
		#$curlexec $CURLOPTS --header 'Content-Type: application/x-www-form-urlencoded' -d pin=$s -d val=1 http://$IPADDRESS/dout.cgi > /dev/null
	done
}


MS7_ShowUsage() {
	echo "Usage: $0 [1|2|3|4|5|6|7|s]"
        echo ""
	echo "Where"
	for s in 1 2 3 4 5 6 7; do
	        echo "$s = switch to antenna $s"
	done
	echo "s = read currently selected antenna"
	echo "g = ground all antennas"
}

MS7_VerifyConnectivity() {
	# Test connectivity to MS-S7-WEB otherwise long timeouts
	MS7_Get "http://$IPADDRESS/widget.cgi"
	if [ "x$REPLY" == "x" ]; then
		echo "Unable to connect MS-S7-WEB at $IPADDRESS"
		echo "Please check network connectivity."
		exit 1
	fi
}


MS7_SelectAntenna() {
	ANT=$(($1-1))
	MS7_Post "-d pin=$ANT -d val=0 http://$IPADDRESS/dout.cgi"
}

MS7_ShowSelected() {
	# Read antenna status
	MS7_Get "http://$IPADDRESS/io.cgi"
	digits=`echo $REPLY | sed 's/[^0-9]*//g'`

	antennafound=0
	for s in 0 1 2 3 4 5 6; do
		thisbit=${digits:${s}:1}
		if [ "x$thisbit" == "x1" ]; then
			selectedantenna=$(($s+1))
			antennafound=$(($antennafound+1))
		fi
	done
	if [ "$antennafound" != "1" ]; then
		echo "Selected antenna: 0"
	else
		echo -n "Selected antenna: "
		echo $selectedantenna
	fi
}

case $1 in
	1|2|3|4|5|6|7)
		MS7_VerifyConnectivity
                MS7_GroundAll
		MS7_SelectAntenna $1
		;;
	g)
		MS7_VerifyConnectivity
		MS7_GroundAll
		;;
	s)
		MS7_VerifyConnectivity
		MS7_ShowSelected
		;;
	*)
		MS7_ShowUsage
		;;
esac
